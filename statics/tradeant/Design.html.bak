<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE html PUBLIC "-//W3C//DTD XHTML 1.0 Transitional//EN" "http://www.w3.org/TR/xhtml1/DTD/xhtml1-transitional.dtd">


<html xmlns="http://www.w3.org/1999/xhtml" xml:lang="en" lang="en">
  <head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8" />
    
    <meta name="Generator" content="iWeb 3.0.4" />
    <meta name="iWeb-Build" content="local-build-20120817" />
    <meta http-equiv="X-UA-Compatible" content="IE=EmulateIE7" />
    <meta name="viewport" content="width=1000" />
    <title>Design</title>
    <link rel="stylesheet" type="text/css" media="screen,print" href="Design_files/Design.css" />
    <!--[if lt IE 8]><link rel='stylesheet' type='text/css' media='screen,print' href='Design_files/DesignIE.css'/><![endif]-->
    <!--[if gte IE 8]><link rel='stylesheet' type='text/css' media='screen,print' href='Media/IE8.css'/><![endif]-->
    <script type="text/javascript" src="Scripts/iWebSite.js"></script>
    <script type="text/javascript" src="Scripts/Widgets/SharedResources/WidgetCommon.js"></script>
    <script type="text/javascript" src="Scripts/Widgets/Navbar/navbar.js"></script>
    <script type="text/javascript" src="Design_files/Design.js"></script>
  </head>
  <body style="background: rgb(250, 255, 252); margin: 0pt; " onload="onPageLoad();" onunload="onPageUnload();">
    <div style="text-align: center; ">
      <div style="margin-bottom: 10px; margin-left: auto; margin-right: auto; margin-top: 10px; overflow: hidden; position: relative; word-wrap: break-word;  text-align: left; width: 1000px; " id="body_content">
        <div style="background: transparent url(Design_files/backgroundimage_1.jpg) no-repeat scroll center center; width: 1000px; ">
          <div style="margin-left: 0px; position: relative; width: 1000px; z-index: 0; " id="nav_layer">
            <div style="height: 0px; line-height: 0px; " class="bumper"> </div>
            <div class="com-apple-iweb-widget-navbar flowDefining" id="widget0" style="margin-left: 20px; margin-top: 0px; opacity: 1.00; position: relative; width: 660px; z-index: 1; ">
    
              <div id="widget0-navbar" class="navbar">

      
                <div id="widget0-bg" class="navbar-bg">

        
                  <ul id="widget0-navbar-list" class="navbar-list">
 <li></li> 
</ul>
                  
      
</div>
                
    
</div>
            </div>
            <script type="text/javascript"><!--//--><![CDATA[//><!--
new NavBar('widget0', 'Scripts/Widgets/Navbar', 'Scripts/Widgets/SharedResources', '.', {"path-to-root": "", "navbar-css": ".navbar {\n\tfont-family: 'Helvetica Neue', Arial, sans-serif;\n\tfont-size: .8em;\n\tcolor: #666666;\n\tline-height: 30px;\n\tborder-bottom: 3px solid #ccc;\n}\n\n.navbar-bg {\n\ttext-align: right;}\n\n.navbar-bg ul {\n\tlist-style: none;\n\tmargin: 0px;\n\tpadding: 0px;\n}\n\n\nli {\n\tlist-style-type: none;\n\tdisplay: inline;\n\tpadding: 0px 5px 0px 0px;\n}\n\n\nli a {\n\ttext-decoration: none;\n\tpadding: 10px;\n\tcolor: #666666;\n\tfont-weight: bold;\n}\n\nli a:visited {\n\ttext-decoration: none;\n\tpadding: 10px;\n\tcolor: #666666;\n\tfont-weight: bold;\n}\n\nli a:hover\r{\r\n \tcolor: #999999;\n\ttext-decoration: none;\r}\n\n\nli.current-page a\r{\r\t color: #66ABC5;\n\ttext-decoration: none;\r}\n", "current-page-GUID": "4CE17211-C61C-4389-9A6E-61A829EE763B", "isCollectionPage": "NO"});
//--><!]]></script>
            <div style="clear: both; height: 0px; line-height: 0px; " class="spacer"> </div>
          </div>
          <div style="height: 75px; margin-left: 0px; position: relative; width: 1000px; z-index: 10; " id="header_layer">
            <div style="height: 0px; line-height: 0px; " class="bumper"> </div>
            <div id="id1" style="height: 43px; left: 20px; position: absolute; top: 17px; width: 515px; z-index: 1; " class="style_SkipStroke shape-with-text">
              <div class="text-content style_External_515_43" style="padding: 0px; ">
                <div class="style">
                  <p style="padding-bottom: 0pt; padding-top: 0pt; " class="Header">TradeAnt - Design</p>
                </div>
              </div>
            </div>
            


            <div id="id2" style="height: 43px; left: 535px; position: absolute; top: 17px; width: 445px; z-index: 1; " class="style_SkipStroke_1 shape-with-text">
              <div class="text-content style_External_445_43" style="padding: 0px; ">
                <div class="style_1">
                  <p style="padding-bottom: 0pt; padding-top: 0pt; " class="Heading_1">2012</p>
                </div>
              </div>
            </div>
          </div>
          <div style="margin-left: 0px; position: relative; width: 1000px; z-index: 5; " id="body_layer">
            <div style="height: 0px; line-height: 0px; " class="bumper"> </div>
            <div id="id3" style="height: 1316px; left: 54px; position: absolute; top: 33px; width: 474px; z-index: 1; " class="style_SkipStroke_2 shape-with-text">
              <div class="text-content style_External_474_1316" style="padding: 0px; ">
                <div class="style_2">
                  <p style="padding-top: 0pt; " class="paragraph_style">This library pays more emphasis on hedging and pricing comes automatically. If you price anything you get a price grid for various spot and times and similarly all the Greeks. Hedging is just balancing the Greeks and it’s quite simple once you can visualize / analyze the effect of adding other market instrument (vanilla’s) to the Greeks. And the best part is coding is extremely easy, let me walk you through it….<br /></p>
                  <p class="paragraph_style_1">In the background a <span class="style_3">PDE (Partial Differential Equation)</span> is solved and you get better Greeks rather than dealing with stability issues of a monte carlo engine. There are numerous PDE’s available and all of them can be solved with varying parameters.  Problem with using PDE’s is numerical instability. <br /></p>
                  <ol>
                    <li style="line-height: 29px; padding-left: 19px; text-indent: -19px; " class="full-width" value="1">
                      <p style="text-indent: -19px; " class="paragraph_style_2"><span style="font-size: 19px; " class="Bullet">1.</span><span style="width: 4px; " class="inline-block"></span>Explicit methods (as in Wilmott’s book) are easy to code but there are huge issues with smaller timestep. <br /></p>
                    </li>
                    <li style="line-height: 29px; padding-left: 19px; text-indent: -19px; " class="full-width" value="2">
                      <p style="text-indent: -19px; " class="paragraph_style_2"><span style="font-size: 19px; " class="Bullet">2.</span><span style="width: 4px; " class="inline-block"></span>Implicit methods (also in Wilmott’s book) are stable unconditionally but hard to code. Also for more than 2 dimensions coding becomes too messy. <br /></p>
                    </li>
                  </ol>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1">The solution is a new method called ADE = “Alternating Direction Explicit” - It’s unconditionally stable like implicit method and it’s easy to code. So all the code in trade ant is based on this rock solid numerical method. <br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1">As of now 2 asset basket structures and single asset exotics are included. Heston PDE is being coded and do look out for git updates. Setting up tradeant is easy if you have a linux system. It looks for header files in “include/tradeant” directory. A sample program is included in main.c which prices a digital and an autocallable. It gives out greeks for all time (in increments of dt) and all steps (in increments of ds). <br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                  <p class="paragraph_style_1"><br /></p>
                </div>
              </div>
            </div>
            


            <div id="id4" style="height: 657px; left: 532px; position: absolute; top: 37px; width: 461px; z-index: 1; " class="style_SkipStroke_3 shape-with-text">
              <div class="text-content style_External_461_657" style="padding: 0px; ">
                <div class="style_4">
                  <p style="padding-top: 0pt; " class="paragraph_style">Exotic derivatives pricing has became insanely easy with the advent of Monte Carlo methods. Any Tom, Dock &amp; Harry can price almost any structured product with valuation tools which are charged for millions. There are of course free tools like QuantLib, but using them is a pain coz it has been coded by pure programmers who paid more attention to the design and I personally feel it is <span class="style_3">horrible</span>. <span class="style_3">And the most worrying aspect is that these libraries are all coded in C++</span>. This leads to creating complex design patterns which creates a wrong impression that object oriented programming is a nice concept.<br /></p>
                  <p class="paragraph_style"><br /></p>
                  <p class="paragraph_style">As <span class="style_3">Linus Torvalds</span> said and I quote<br /></p>
                  <p class="paragraph_style_3"><span style="line-height: 20px; " class="style_5">“</span>C++ is a horrible language. It's made more horrible by the fact that a lot of substandard programmers use it, to the point where it's much much easier to generate total and utter crap with it. Quite frankly, even if the choice of C were to do *nothing* but keep the C++ programmers out, that in itself would be a huge reason to use C”<span style="line-height: 20px; " class="style_5"><br /></span></p>
                  <p class="paragraph_style"><br /></p>
                </div>
              </div>
            </div>
            <div style="height: 1349px; line-height: 1349px; " class="spacer"> </div>
          </div>
          <div style="height: 75px; margin-left: 0px; position: relative; width: 1000px; z-index: 15; " id="footer_layer">
            <div style="height: 0px; line-height: 0px; " class="bumper"> </div>
            <a href="http://apple.com/mac" title="http://apple.com/mac"><img src="Design_files/mwmac.png" alt="Made on a Mac" style="border: none; height: 50px; left: 280px; opacity: 0.35; position: absolute; top: 8px; width: 139px; z-index: 1; " id="id5" />

</a>
          </div>
        </div>
      </div>
    </div>
  </body>
</html>


